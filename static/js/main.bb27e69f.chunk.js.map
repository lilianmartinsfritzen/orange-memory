{"version":3,"sources":["components/CardElement.jsx","components/Board.jsx","components/GameOver.jsx","game/index.js","OrangeMemory.jsx","index.jsx"],"names":["CardElement","props","onClick","handleTurn","card","id","className","turned","src","icon","alt","Board","cards","map","index","GameOver","show","handleRestart","game","gameCards","lockMode","firstCard","secondCard","setCard","this","filter","checkMatch","clearCards","unturnedCards","checkGameOver","length","createGameCards","forEach","gameCard","push","createGameCardPair","flatMap","pair","mixCards","createGameCardId","parseInt","Math","random","currentIndex","randomIndex","floor","turnCard","cardId","gameOverCallBack","noMatchCallBack","setTimeout","OrangeMemory","useState","gameOver","setGameOver","setCards","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,EAAYC,GAClC,OACE,sBAAKC,QAAS,WAAOD,EAAME,WAAWF,EAAMG,OAAQC,GAAIJ,EAAMG,KAAKC,GAAIC,UAAS,eAAUL,EAAMG,KAAKG,OAAS,OAAS,IAAvH,UACE,qBAAKD,UAAU,QAAf,SACE,qBACEA,UAAU,OACVE,IAAG,wBAAmBP,EAAMG,KAAKK,KAA9B,QACHC,IAAKT,EAAMG,KAAKK,SAGpB,qBAAKH,UAAU,OAAf,SACE,qBACEA,UAAU,YACVE,IAAI,yBACJE,IAAI,cCbC,SAASC,EAAMV,GAC5B,OACE,qBAAKI,GAAG,QAAR,SACGJ,EAAMW,MAAMC,KAAI,SAACT,EAAMU,GAAP,OACf,cAACd,EAAD,CAAaG,WAAYF,EAAME,WAAwBC,KAAMA,GAAbU,QCLzC,SAASC,EAASd,GAC/B,OACEA,EAAMe,KACJ,sBAAKX,GAAG,WAAR,UACE,yEAGA,wBAAQA,GAAG,UAAUH,QAASD,EAAMgB,cAApC,wBACO,wBCVf,IAuHeC,EAvHJ,CAETC,UAAW,CACT,UACA,WACA,UACA,QACA,kBACA,iBAGFC,UAAU,EACVC,UAAW,KACXC,WAAY,KAEZC,QAAS,SAASlB,GAEhB,IAAID,EAAOoB,KAAKZ,MAAMa,QAAO,SAAArB,GAAI,OAAIA,EAAKC,KAAOA,KAAI,GACrD,OAAID,EAAKG,SAAUiB,KAAKJ,WAInBI,KAAKH,WAMRG,KAAKF,WAAalB,EAClBoB,KAAKF,WAAWf,QAAS,EACzBiB,KAAKJ,UAAW,GACT,IARPI,KAAKH,UAAYjB,EACjBoB,KAAKH,UAAUd,QAAS,GACjB,KAUXmB,WAAY,WACV,SAAKF,KAAKH,YAAcG,KAAKF,aAGtBE,KAAKH,UAAUZ,OAASe,KAAKF,WAAWb,MAGjDkB,WAAY,WACVH,KAAKH,UAAY,KACjBG,KAAKF,WAAa,KAClBE,KAAKJ,UAAW,GAGlBQ,cAAe,WACbJ,KAAKH,UAAUd,QAAS,EACxBiB,KAAKF,WAAWf,QAAS,EACzBiB,KAAKG,cAGPE,cAAe,WACb,OAA0D,IAAnDL,KAAKZ,MAAMa,QAAO,SAAArB,GAAI,OAAKA,EAAKG,UAAQuB,QAGjDC,gBAAiB,WAAa,IAAD,OAS3B,OARAP,KAAKZ,MAAQ,GAEbY,KAAKL,UAAUa,SAAQ,SAACC,GACtB,EAAKrB,MAAMsB,KAAK,EAAKC,mBAAmBF,OAG1CT,KAAKZ,MAAQY,KAAKZ,MAAMwB,SAAQ,SAAAC,GAAI,OAAIA,KACxCb,KAAKc,WACEd,KAAKZ,OAGduB,mBAAoB,SAAUF,GAC5B,MAAO,CAAC,CACN5B,GAAImB,KAAKe,iBAAiBN,GAC1BxB,KAAMwB,EACN1B,QAAQ,GACP,CACDF,GAAImB,KAAKe,iBAAiBN,GAC1BxB,KAAMwB,EACN1B,QAAQ,KAIZgC,iBAAkB,SAAUN,GAC1B,OAAOA,EAAWO,SAAyB,IAAhBC,KAAKC,WAGlCJ,SAAU,SAAU1B,GAIlB,IAHA,IAAI+B,EAAenB,KAAKZ,MAAMkB,OAC1Bc,EAAc,EAEK,IAAjBD,GAAoB,CACxBC,EAAcH,KAAKI,MAAMJ,KAAKC,SAAWC,GACzCA,IAFwB,MAI8B,CAACnB,KAAKZ,MAAM+B,GAAenB,KAAKZ,MAAMgC,IAA3FpB,KAAKZ,MAAMgC,GAJY,KAIEpB,KAAKZ,MAAM+B,GAJb,OAQ5BG,SAAU,SAASC,EAAQC,EAAkBC,GAAkB,IAAD,OACxDzB,KAAKD,QAAQwB,IACXvB,KAAKF,aACHE,KAAKE,cACPF,KAAKG,aAEDH,KAAKK,iBACPmB,KAIFE,YAAW,WACT,EAAKtB,gBACLqB,MACC,QC3GE,SAASE,IAEtB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc2C,EAAd,KAsBA,OApBAC,qBAAU,WACRD,EAASrC,EAAKa,qBACb,IAmBD,gCACE,cAACpB,EAAD,CAAOR,WAZX,SAAoBC,GAElBc,EAAK4B,SAAS1C,EAAKC,IAAI,WACrBiD,GAAY,MACX,WACDC,EAAS,YAAIrC,EAAKN,WAEpB2C,EAAS,YAAIrC,EAAKN,SAKeA,MAAOA,IACtC,cAACG,EAAD,CAAUC,KAAMqC,EAAUpC,cAnB9B,WACEC,EAAKS,aACL4B,EAASrC,EAAKa,mBACduB,GAAY,S,MCXhBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACR,EAAD,MAEFS,SAASC,eAAe,W","file":"static/js/main.bb27e69f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CardElement(props) {\n  return (\n    <div onClick={() => {props.handleTurn(props.card)}} id={props.card.id} className={`card ${props.card.turned ? \"turn\" : \"\"}`}>\n      <div className=\"front\">\n        <img\n          className=\"icon\"\n          src={`assets/images/${props.card.icon}.png`}\n          alt={props.card.icon}\n        />\n      </div>\n      <div className=\"back\">\n        <img\n          className=\"icon-back\"\n          src=\"assets/images/back.png\"\n          alt=\"back\"\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport CardElement from './CardElement'\n\nexport default function Board(props) {\n  return (\n    <div id=\"board\">\n      {props.cards.map((card, index) => \n        <CardElement handleTurn={props.handleTurn} key={index} card={card} ></CardElement>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function GameOver(props) {\n  return (\n    props.show ?\n      <div id=\"gameOver\">\n        <div>\n          Você completou o jogo, parabéns!\n        </div>\n        <button id=\"restart\" onClick={props.handleRestart} >Restart</button>\n      </div> : <div></div>\n  )\n}\n","let game = {\n\n  gameCards: [\n    'fcamara',\n    'fc-nuvem',\n    'imagine',\n    'omnik',\n    'orange-ventures',    \n    'prog-formacao'   \n  ],\n\n  lockMode: false,\n  firstCard: null,\n  secondCard: null,\n\n  setCard: function(id) {\n\n    let card = this.cards.filter(card => card.id === id)[0];\n    if (card.turned || this.lockMode) {\n      return false;\n    }\n\n    if (!this.firstCard) {\n      this.firstCard = card;\n      this.firstCard.turned = true;\n      return true;\n\n    } else {\n      this.secondCard = card;\n      this.secondCard.turned = true;\n      this.lockMode = true;\n      return true;\n    }\n  },\n\n  checkMatch: function() {\n    if (!this.firstCard || !this.secondCard) {\n      return false;\n    }\n    return this.firstCard.icon === this.secondCard.icon;\n  },\n\n  clearCards: function() {\n    this.firstCard = null;\n    this.secondCard = null;\n    this.lockMode = false;\n  },\n\n  unturnedCards: function() {\n    this.firstCard.turned = false;\n    this.secondCard.turned = false;\n    this.clearCards();\n  },\n\n  checkGameOver: function() {\n    return this.cards.filter(card => !card.turned).length === 0;\n  },\n\n  createGameCards: function () {\n    this.cards = [];\n  \n    this.gameCards.forEach((gameCard) => {\n      this.cards.push(this.createGameCardPair(gameCard))\n    })\n  \n    this.cards = this.cards.flatMap(pair => pair);\n    this.mixCards();\n    return this.cards;\n  },  \n  \n  createGameCardPair: function (gameCard) {\n    return [{\n      id: this.createGameCardId(gameCard),\n      icon: gameCard,\n      turned: false,\n    }, {\n      id: this.createGameCardId(gameCard),\n      icon: gameCard,\n      turned: false,\n    }]\n  },\n  \n  createGameCardId: function (gameCard) {\n    return gameCard + parseInt(Math.random() * 1000);\n  },\n\n  mixCards: function (cards) {\n    let currentIndex = this.cards.length;\n    let randomIndex = 0;\n  \n    while(currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      [this.cards[randomIndex], this.cards[currentIndex]] = [this.cards[currentIndex], this.cards[randomIndex]]\n    }\n  },\n\n  turnCard: function(cardId, gameOverCallBack, noMatchCallBack) {\n    if (this.setCard(cardId)) {\n      if (this.secondCard) {\n        if (this.checkMatch()) {\n          this.clearCards();\n  \n          if (this.checkGameOver()) {\n            gameOverCallBack();\n          }\n  \n        } else {\n          setTimeout(() => {\n            this.unturnedCards();\n            noMatchCallBack();\n          }, 1000);\n        }\n      }\n    }\n  }\n}\n\nexport default game;","import React, { useState, useEffect } from 'react';\nimport Board from './components/Board';\nimport GameOver from './components/GameOver';\nimport game from './game/index'\n\nexport default function OrangeMemory() {\n\n  const [gameOver, setGameOver] = useState(false);\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    setCards(game.createGameCards())\n  }, [])\n\n  function restart() {\n    game.clearCards();\n    setCards(game.createGameCards());\n    setGameOver(false);\n  }\n\n  function handleTurn(card) {\n\n    game.turnCard(card.id, () => {\n      setGameOver(true);\n    }, () => {\n      setCards([...game.cards]);\n    })\n    setCards([...game.cards]);\n  }\n\n  return (\n    <div>\n      <Board handleTurn={handleTurn} cards={cards}></Board>\n      <GameOver show={gameOver} handleRestart={restart} ></GameOver>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OrangeMemory from './OrangeMemory';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <OrangeMemory />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}